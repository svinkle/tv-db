{"version":3,"sources":["components/Header.js","components/Search.js","components/Footer.js","components/Show.js","pages/Home.js","components/Loader.js","components/Announcements.js","pages/Results.js","pages/Details.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","headerStyles","background","concat","process","backgroundSize","react_default","a","createElement","className","style","Link","to","Component","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clearError","bind","assertThisInitialized","floatLabel","handleSubmit","error","classList","contains","remove","e","eventType","type","textInput","target","value","length","labelText","add","preventDefault","q","props","history","push","focus","_this2","action","method","role","onSubmit","htmlFor","ref","name","id","placeholder","autoComplete","onKeyDown","onKeyUp","onBlur","aria-label","aria-hidden","PropTypes","object","isRequired","Footer","href","Show","state","loading","results","fetchShowData","showId","fetch","then","data","json","setState","src","image","medium","replace","alt","string","Home","container","React","createRef","watching","document","title","current","window","scrollTo","aria-labelledby","tabIndex","components_Header","components_Search","map","show","key","components_Show","components_Footer","Loading","Announcements","aria-live","aria-atomic","message","Results","announcementMessage","match","params","setTimeout","Loader","components_Announcements","Details","ReactHtmlParser","summary","genres","scope","genre","network","country","rating","average","externals","imdb","rel","App","require","load","google","families","keyboardFocus","mouseFocus","addEventListener","app","Route","basename","render","_ref","location","Switch","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","BrowserRouter","src_App_0","getElementById","URL","origin","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6131cea4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\n/**\n * Header.js\n *\n * This renders the header of the site, mainly just the logo which links\n * back to the homepage to conduct a new search.\n */\nclass Header extends Component {\n  render() {\n    const headerStyles = {\n      background: `#000 url(${process.env.PUBLIC_URL}/images/tvs.jpg) 100% 50% no-repeat`,\n      backgroundSize: '75%'\n    };\n\n    return (\n      <header className=\"header\" style={headerStyles}>\n        <Link to={`${process.env.PUBLIC_URL}/`} className=\"header__link logo\">TV-Db</Link>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Search.js\n *\n * This renders the search form which appears on the homepage, Home.js.\n *\n * The only required prop is `history` which is used to load the results\n * page by pushing the URL to the router object.\n */\nclass Search extends Component {\n  constructor() {\n    super();\n\n    // Bind the custom method(s) to the class\n    this.clearError = this.clearError.bind(this);\n    this.floatLabel = this.floatLabel.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  /**\n   * Clear the error text on `input` keyup event, if the text is currently\n   * active, that is.\n   *\n   * @return null\n   */\n  clearError() {\n    if (this.error.classList.contains('search__error-text--active')) {\n      this.error.classList.remove('search__error-text--active');\n    }\n  }\n\n  /**\n   * Float the `label` when the correct conditions are met.\n   * https://codepen.io/svinkle/pen/NvazGb 😎\n   *\n   * @param  {Object} e Event object\n   * @return null\n   */\n  floatLabel(e) {\n    const eventType = e.type;\n    const textInput = e.target;\n\n    // On `keyup`, if there's text in the input, show the label\n    if (eventType === 'keyup' && textInput.value.length !== 0) {\n      this.labelText.classList.add('search__label-text--floating');\n    }\n\n    // On `blur`, if there's no text in the input, hide the label\n    if (eventType === 'blur' && textInput.value.length === 0) {\n      this.labelText.classList.remove('search__label-text--floating');\n    }\n  }\n\n  /**\n   * Called when the search form is submited. Doens't do much except load\n   * the Results.js \"page\" with the specified search query.\n   *\n   * @return null\n   */\n  handleSubmit(e) {\n\n    // Prevent the default action\n    e.preventDefault();\n\n    // A bit of form validation\n    if (!this.q.value) {\n\n      // Show the error message if nothing's been entered\n      this.error.classList.add('search__error-text--active');\n\n      // Send focus back to the `input`\n      this.q.focus();\n    } else {\n\n      // Set the page URL by pushing to the router history array\n      this.props.history.push(`${process.env.PUBLIC_URL}/results/${this.q.value}`);\n    }\n  }\n\n  render() {\n    return (\n      <form action=\"/\" method=\"GET\" className=\"search\" role=\"search\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"q\" className=\"search__label\">\n          <span className=\"search__label-text\" ref={(labelText) => { this.labelText = labelText; }}>Your favourite show…</span>\n          {/*\n            Need to create a ref to the `input` element here in order to\n            read its current value within the `handleSubmit()` method\n          */}\n          <input type=\"search\" name=\"q\" id=\"q\" placeholder=\"Your favourite show…\" autoComplete=\"off\" className=\"search__input\" onKeyDown={this.clearError} onKeyUp={this.floatLabel} onBlur={this.floatLabel} ref={(q) => { this.q = q; }}/>\n          <span className=\"search__error-text\" ref={(error) => { this.error = error; }}>No favourite show? You must have at least one! Try again. <span role=\"img\" aria-label=\"\" aria-hidden=\"true\">🙂</span></span>\n        </label>\n        <button className=\"btn search__btn\">Make&nbsp;It&nbsp;So&nbsp;<span role=\"img\" aria-label=\"\" aria-hidden=\"true\">👉</span></button>\n      </form>\n    );\n  }\n}\n\nSearch.PropTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default Search;\n","import React, {Component} from 'react';\n\n/**\n * Footer.js\n *\n * This renders the footer of the site, including static links out to other\n * relavent resources.\n */\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\" role=\"contentinfo\">\n        <p>\n          <span className=\"logo\">TV-Db</span> is{' '}\n          <span role=\"img\" aria-label=\"coded\">\n            ⌨️\n          </span>{' '}\n          with{' '}\n          <span role=\"img\" aria-label=\"love\">\n            ❤️\n          </span>{' '}\n          by <a href=\"https://twitter.com/svinkle/\">@svinkle</a>. View the\n          source on <a href=\"https://github.com/svinkle/tv-db\">GitHub</a>.\n          <br />\n          This app is a demo component to the article{' '}\n          <a href=\"https://medium.com/@svinkle/creating-accessible-react-apps-38dc1c2775cf\">\n            Creating Accessible React Apps\n          </a>.\n          <br />\n          Data, images, and content via{' '}\n          <a href=\"https://tvmaze.com/api\">TVMaze API</a>.\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n/**\n * Show.js\n *\n * This renders the indavidual show links which appear on the homepage and\n * the search results page.\n *\n * The only required prop is the `showId` which is used to fetch the show\n * data from the TVMaze API.\n */\nclass Show extends Component {\n  constructor() {\n    super();\n\n    // Set the initial component state\n    this.state = {\n      loading: true,\n      results: null\n    };\n\n    // Bind the custom method(s) to the class\n    this.fetchShowData = this.fetchShowData.bind(this);\n  }\n\n  componentDidMount() {\n\n    // Go and get the data via `fetchShowData()` method\n    this.fetchShowData();\n  }\n\n  /**\n   * Fetch TV data from TVMaze API based on the `showId` prop.\n   *\n   * @return null\n   */\n  fetchShowData() {\n\n    // TV show `id` prop which is supplied from the parent component\n    const id = this.props.showId;\n\n    // Use the new `fetch()` API to go and grab some data\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    fetch(`https://api.tvmaze.com/shows/${id}`)\n      .then(data => data.json())\n      .then(data => {\n\n        // Once we have the data, set it to the `results` state property\n        // and update the `loading` property\n        this.setState({loading: false, results: data});\n      });\n  }\n\n  render() {\n    if (this.state.loading) {\n\n      // Don't render anything for indiavidual show links\n      return null;\n    }\n\n    return (\n\n      // Return a <Link/> which takes advantage of React's virtual DOM, but\n      // renders an accessible `<a>` element.\n      <Link\n        to={`${process.env.PUBLIC_URL}/show/${this.state.results.id}`}\n        className=\"show__link\"\n      >\n        {/*\n          If there's no image available from the API, show a placeholder\n          with the show name embedded; otherwise, show the cover image\n        */}\n        <img\n          src={\n            this.state.results.image\n              ? this.state.results.image.medium.replace('http', 'https')\n              : `http://via.placeholder.com/210x295/000000/ffffff/?text=${\n                this.state.results.name\n              }`\n          }\n          alt={this.state.results.name}\n          className=\"show__image\"\n        />\n      </Link>\n    );\n  }\n}\n\nShow.PropTypes = {\n  showId: PropTypes.string.isRequired\n};\n\nexport default Show;\n","import React, {Component} from 'react';\nimport Header from '../components/Header';\nimport Search from '../components/Search';\nimport Footer from '../components/Footer';\nimport Show from '../components/Show';\n\n/**\n * Home.js\n *\n * This renders the home \"page\" when first launching the app.\n */\nclass Home extends Component {\n  constructor() {\n    super();\n\n    // The container to receive focus on page load\n    this.container = React.createRef();\n\n    // An array of show `id`s which is used to populate the homepage\n    this.watching = [526, 587, 431, 82, 73, 83, 582, 107, 994];\n  }\n\n  componentDidMount() {\n\n    // Update the `title` element text\n    document.title = 'TV-Db';\n\n    // Set focus to the content container\n    this.container.current.focus();\n\n    // Ensure the viewport returns to the top of the document window\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <div\n        aria-labelledby=\"pageTitle\"\n        className=\"container\"\n        ref={this.container}\n        role=\"region\"\n        tabIndex=\"-1\"\n      >\n        <Header />\n        <main className=\"main\">\n          <h1 id=\"pageTitle\" className=\"heading heading--1 home__title center\">\n            Search <span className=\"logo\">TV-Db</span> for your favourite TV\n            shows!\n          </h1>\n          <Search history={this.props.history} />\n          <h2 className=\"heading heading--2 center\">\n            Check out what we're watching!\n          </h2>\n          {/*\n            Iterate over the `watching` array and output show links in a list\n            via `<Show/>` component, passing `showId` prop\n          */}\n          <ul className=\"show__list\">\n            {this.watching.map(show => {\n              return (\n                <li className=\"show__list-item\" key={show}>\n                  <Show showId={show} />\n                </li>\n              );\n            })}\n          </ul>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\n/**\n * Loader.js\n *\n * This renders the loading screen in between a search and viewing the\n * details page, Details.js.\n */\nclass Loading extends Component {\n  constructor() {\n    super();\n\n    // The container to receive focus on page load\n    this.container = React.createRef();\n  }\n\n  componentDidMount() {\n\n    // When the component mounts, set focus onto the container in order to\n    // announce the current state of the app — \"Loading…\"\n    this.container.current.focus();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <main className=\"main\">\n          {/*\n            Need to create a ref to the `div` element here in order to\n            set focus on this container within the `componentDidMount()`\n            lifecycle method\n          */}\n          <div\n            aria-label=\"Loading…\"\n            className=\"loader\"\n            ref={this.container}\n            role=\"region\"\n            tabIndex=\"-1\"\n          >\n            <img\n              src={`${process.env.PUBLIC_URL}/images/loading.gif`}\n              alt=\"\"\n              className=\"loader__image\"\n            />\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Annoucements.js\n *\n * This renders the ARIA live element which appears in Results.js.\n *\n * The only required prop is `message` which is the text used when announcing\n * the message to the screen reader user.\n */\nclass Announcements extends React.Component {\n  render() {\n    return (\n      <div className=\"visuallyhidden\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\">\n        {this.props.message}\n      </div>\n    );\n  }\n}\n\nAnnouncements.PropTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default Announcements;\n","import React, {Component} from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Show from '../components/Show';\nimport Loader from '../components/Loader';\nimport Announcements from '../components/Announcements';\n\n/**\n * Results.js\n *\n * This renders the results \"page\" after submitting the search form.\n */\nclass Results extends Component {\n  constructor() {\n    super();\n\n    // The container to receive focus on page load\n    this.container = React.createRef();\n\n    // Bind the custom method(s) to the class\n    this.fetchShowData = this.fetchShowData.bind(this);\n\n    // Set the initial component state\n    this.state = {\n      loading: true,\n      results: null,\n      q: null,\n      announcementMessage: null\n    };\n  }\n\n  componentDidMount() {\n\n    // Cache the `q` URL param which comes in from the router, defined\n    // in App.js\n    const q = this.props.match.params.q;\n\n    // Update the `title` element text\n    document.title = 'Loading… | TV-Db';\n\n    // Go and get the data via `fetchShowData()` method\n    this.fetchShowData(q);\n\n    // Ensure the viewport returns to the top of the document window\n    window.scrollTo(0, 0);\n  }\n\n  /**\n   * Fetch TV data from TVMaze API based on the `q` URL param.\n   *\n   * @param {String} q Search terms from Search.js\n   * @return null\n   */\n  fetchShowData(q) {\n\n    // Timeout to allow old school TV loading gif to run for a bit 😎\n    setTimeout(() => {\n\n      // Use the new `fetch()` API to go and grab some data\n      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      fetch(`https://api.tvmaze.com/search/shows?q=${q}&page=2`)\n        .then(data => data.json())\n        .then(data => {\n\n          // Once we have the data, set it to the `results` state property\n          // and update the `loading` property, `q` property, and\n          // `announcementMessage` property\n          this.setState({\n            loading: false,\n            results: data,\n            q: q,\n            announcementMessage: `Total results found: ${data.length}`\n          });\n\n          // Update the `title` element text\n          document.title = `Search Results for \"${q}\" | TV-Db`;\n\n          // Set focus to the content container after the data has been fetched\n          // Note: this happens _after_ setting the `loading` state property,\n          // so the loading screen will be gone by this point\n          this.container.current.focus();\n        });\n    }, 750);\n  }\n\n  render() {\n\n    // Show the loading screen only if the current state of the `loading`\n    // property retirns `true`\n    if (this.state.loading) {\n      return <Loader />;\n    }\n\n    return (\n      <div\n        aria-labelledby=\"pageTitle\"\n        className=\"container\"\n        ref={this.container}\n        role=\"region\"\n        tabIndex=\"-1\"\n      >\n        <Header />\n\n        <main className=\"main\">\n          <h1 id=\"pageTitle\" className=\"heading heading--1\">\n            Search Results for \"{this.state.q}\":\n          </h1>\n          {/*\n            Iterate over the data and output show links in a list via `<Show/>`\n            component, passing the `id` via `showId` prop\n          */}\n          <ul className=\"show__list\">\n            {this.state.results.map(show => {\n              return (\n                <li className=\"show__list-item\" key={show.show.id}>\n                  <Show showId={show.show.id} />\n                </li>\n              );\n            })}\n          </ul>\n        </main>\n\n        <Footer />\n\n        {/*\n          Announce any changes to the `announcementMessage` state property\n        */}\n        <Announcements message={this.state.announcementMessage} />\n      </div>\n    );\n  }\n}\n\nexport default Results;\n","import React, {Component} from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Loader from '../components/Loader';\n\n/**\n * Details.js\n *\n * This renders the show details \"page\" after clicking a show link from the\n * homepage or the results page.\n */\nclass Details extends Component {\n  constructor() {\n    super();\n\n    // The container to receive focus on page load\n    this.container = React.createRef();\n\n    // Bind the custom method(s) to the class\n    this.fetchShowData = this.fetchShowData.bind(this);\n\n    // Set the initial component state\n    this.state = {\n      loading: true,\n      results: null\n    };\n  }\n\n  componentDidMount() {\n\n    // Update the `title` element text\n    document.title = 'Loading… | TV-Db';\n\n    // Go and get the data via `fetchShowData()` method\n    this.fetchShowData();\n\n    // Ensure the viewport returns to the top of the document window\n    window.scrollTo(0, 0);\n  }\n\n  /**\n   * Fetch TV data from TVMaze API based on the `id` URL param.\n   *\n   * @return null\n   */\n  fetchShowData() {\n\n    // Cache the `id` URL param which comes in from the router, defined\n    // in App.js\n    const id = this.props.match.params.id;\n\n    // Timeout to allow old school TV loading gif to run for a bit 😎\n    setTimeout(() => {\n\n      // Use the new `fetch()` API to go and grab some data\n      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      fetch(`https://api.tvmaze.com/shows/${id}`)\n        .then(data => data.json())\n        .then(data => {\n\n          // Once we have the data, set it to the `results` state property\n          // and update the `loading` property\n          this.setState({loading: false, results: data});\n\n          // Update the `title` element text with the proper show name, via\n          // `this.state.results.name` object, now that we have the data available\n          document.title = `Show Details: ${this.state.results.name} | TV-Db`;\n\n          // Set focus to the content container after the data has been fetched\n          // Note: this happens _after_ setting the `loading` state property,\n          // so the loading screen will be gone by this point\n          this.container.current.focus();\n        });\n    }, 750);\n  }\n\n  render() {\n\n    // Show the loading screen only if the current state of the `loading`\n    // property retirns `true`\n    if (this.state.loading) {\n      return <Loader />;\n    }\n\n    return (\n      <div\n        aria-labelledby=\"pageTitle\"\n        className=\"container\"\n        ref={this.container}\n        role=\"region\"\n        tabIndex=\"-1\"\n      >\n        <Header />\n\n        <main className=\"main\">\n          <h1 id=\"pageTitle\" className=\"details__title heading heading--1\">\n            {this.state.results.name}\n          </h1>\n\n          <div className=\"grid\">\n            <div className=\"grid__item\">\n              {/*\n                If there's no image available from the API, show a placeholder\n                with the show name embedded; otherwise, show the cover image\n              */}\n              <img\n                src={\n                  this.state.results.image\n                    ? this.state.results.image.medium.replace('http', 'https')\n                    : `http://via.placeholder.com/210x295/000000/ffffff/?text=${\n                      this.state.results.name\n                    }`\n                }\n                alt=\"\"\n                className=\"details__image\"\n                aria-hidden=\"true\"\n              />\n            </div>\n            <div className=\"grid__item\">\n              <h2 className=\"details__subtitle heading heading--2\">Summary</h2>\n              {/*\n                Included a third-party module, `ReactHtmlParser()` in order to\n                assist in parsing the HTML from the TVMaze API\n              */}\n              {ReactHtmlParser(this.state.results.summary)}\n\n              <h2 className=\"details__subtitle heading heading--2\">Details</h2>\n              <table className=\"details__table\">\n                <tbody>\n                  {/*\n                    If the genres data exists…\n                  */}\n                  {this.state.results.genres ? (\n                    <tr>\n                      <th scope=\"row\" id=\"genre\">\n                        Genre\n                      </th>\n                      <td>\n                        <ul\n                          className=\"details__genere-list\"\n                          aria-labelledby=\"genre\"\n                        >\n                          {this.state.results.genres.map(genre => {\n                            return <li key={genre}>{genre}</li>;\n                          })}\n                        </ul>\n                      </td>\n                    </tr>\n                  ) : (\n                    ''\n                  )}\n                  {/*\n                    If the type data exists…\n                  */}\n                  {this.state.results.type ? (\n                    <tr>\n                      <th scope=\"row\">Type</th>\n                      <td>{this.state.results.type}</td>\n                    </tr>\n                  ) : (\n                    ''\n                  )}\n                  {/*\n                    If the network data exists…\n                  */}\n                  {this.state.results.network ? (\n                    <tr>\n                      <th scope=\"row\">Network</th>\n                      <td>\n                        {this.state.results.network.name},{' '}\n                        {this.state.results.network.country.name}\n                      </td>\n                    </tr>\n                  ) : (\n                    ''\n                  )}\n                  {/*\n                    If the rating data exists…\n                  */}\n                  {this.state.results.rating ? (\n                    <tr>\n                      <th scope=\"row\">Rating</th>\n                      <td>\n                        {this.state.results.rating.average}\n                        <span aria-hidden=\"true\">/</span>\n                        <span className=\"visuallyhidden\">out of</span>10\n                      </td>\n                    </tr>\n                  ) : (\n                    ''\n                  )}\n                </tbody>\n              </table>\n\n              <h2 className=\"details__subtitle heading heading--2\">\n                More Info\n              </h2>\n              <ul>\n                {/*\n                  Generate and output a link to IMDb for more info, if the link\n                  exists in the data result set\n                */}\n                {this.state.results.externals.imdb ? (\n                  <li>\n                    <a\n                      href={`http://imdb.com/title/${\n                        this.state.results.externals.imdb\n                      }/`}\n                      className=\"details__more-link\"\n                      target=\"_blank\"\n                      rel=\"nofollow\"\n                    >\n                      Check out {this.state.results.name} on IMDb!{' '}\n                      <span\n                        role=\"img\"\n                        aria-label=\", opens third-party website in new window\"\n                      >\n                        👉\n                      </span>\n                    </a>\n                  </li>\n                ) : (\n                  ''\n                )}\n                <li>\n                  {/*\n                    Generate and output a link to YouTube for more 📺\n                  */}\n                  <a\n                    href={`https://youtube.com/results?search_query=${\n                      this.state.results.name\n                    }`}\n                    className=\"details__more-link\"\n                    target=\"_blank\"\n                    rel=\"nofollow\"\n                  >\n                    Find out what YouTube has available for{' '}\n                    {this.state.results.name}{' '}\n                    <span\n                      role=\"img\"\n                      aria-label=\", opens third-party website in new window\"\n                    >\n                      📺\n                    </span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </main>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Results from './pages/Results';\nimport Details from './pages/Details';\nimport './App.css';\n\n/**\n * Home.js\n *\n * This renders the primary App container. Also handles all app routing.\n */\nclass App extends Component {\n  constructor() {\n    super();\n\n    // Google Fonts\n    const WebFont = require('webfontloader');\n\n    WebFont.load({\n      google: {\n        families: ['Erica One', 'Open Sans:300,400,700']\n      }\n    });\n\n    // Bind the custom method(s) to the class\n    this.keyboardFocus = this.keyboardFocus.bind(this);\n    this.mouseFocus = this.mouseFocus.bind(this);\n\n    // Show focus styles on keyboard events only 😎\n    // https://codepen.io/svinkle/pen/zzrORW\n    document.addEventListener('keyup', this.keyboardFocus);\n    document.addEventListener('mousedown', this.mouseFocus);\n  }\n\n  /**\n   * Add the focus class to the container if the keyboard event is an\n   * element within the container.\n   *\n   * @param {Object} e Keyboard event object\n   * @return null\n   */\n  keyboardFocus(e) {\n    if (this.app.contains(e.target)) {\n      this.app.classList.add('app--has-focus');\n    } else {\n      this.app.classList.remove('app--has-focus');\n    }\n  }\n\n  /**\n   * Remove the focus class on mouse click.\n   *\n   * @param {Object} e Mouse event object\n   * @return null\n   */\n  mouseFocus(e) {\n    if (this.app.contains(e.target)) {\n      this.app.classList.remove('app--has-focus');\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className=\"app\"\n        ref={app => {\n          this.app = app;\n        }}\n      >\n        <Route\n          basename={'/'}\n          render={({location}) => (\n            <Switch key={location.key} location={location}>\n              <Route\n                exact\n                path={`${process.env.PUBLIC_URL}/`}\n                component={Home}\n                key={location.key}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/results/:q`}\n                component={Results}\n                key={location.key}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/show/:id`}\n                component={Details}\n                key={location.key}\n              />\n            </Switch>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}